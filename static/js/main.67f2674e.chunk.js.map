{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","isModalOpen","useState","selected","setSelected","useEffect","className","map","todo","id","completed","classNames","title","type","onClick","event","todoId","preventDefault","clickHandler","TodoFilter","onFilterValueChange","onSelectedOptionTodo","clearSearchBtn","setClearSearchBtn","ref","useRef","onChange","currentTarget","value","placeholder","length","style","pointerEvents","current","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","closeModalTodo","user","setUser","userId","href","name","App","setTodos","setSelectedTodo","filteredTodos","setFilteredTodos","optionSelected","setOptionSelected","filter","setFilter","result","filtered","option","filterByOption","toLowerCase","includes","filteredStr","optionValue","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67f2674e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: (todoId: number) => void,\n  isModalOpen: boolean\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  isModalOpen,\n}) => {\n  const [selected, setSelected] = useState(0);\n\n  useEffect(() => {\n    if (!isModalOpen) {\n      setSelected(0);\n    }\n  }, [isModalOpen]);\n\n  const clickHandler = (event: React.MouseEvent, todoId: number) => {\n    event.preventDefault();\n    selectedTodo(todoId);\n    setSelected(todoId);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames('',\n                {\n                  'has-text-success': todo.completed === true,\n                  'has-text-danger': todo.completed === false,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={(event) => clickHandler(event, todo.id)}\n              >\n                <span className=\"icon\">\n\n                  <i className={classNames('far',\n                    {\n                      'fa-eye': todo.id !== selected,\n                      'fa-eye-slash': todo.id === selected,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useRef, useState } from 'react';\n\ntype Props = {\n  onFilterValueChange: (input: string) => void,\n  onSelectedOptionTodo: (optionValue: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onFilterValueChange,\n  onSelectedOptionTodo,\n}) => {\n  const [clearSearchBtn, setClearSearchBtn] = useState(false);\n\n  const inputChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\n    onFilterValueChange(event.currentTarget.value);\n    setClearSearchBtn(event.currentTarget.value.length > 0);\n  };\n\n  const ref = useRef<HTMLInputElement>(null);\n\n  const onClearInput = () => {\n    if (ref.current !== null) {\n      ref.current.value = '';\n    }\n\n    onFilterValueChange('');\n    setClearSearchBtn(false);\n  };\n\n  const selectedOptionTodo = (event: React.FormEvent<HTMLSelectElement>) => {\n    onSelectedOptionTodo(event.currentTarget.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={selectedOptionTodo}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={inputChangeHandler}\n          ref={ref}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {clearSearchBtn ? (\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onClearInput}\n            />\n          ) : null}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\n\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo,\n  closeModalTodo: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, closeModalTodo }) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, [todo]);\n\n  const closeModalHandler = () => {\n    closeModalTodo();\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModalHandler}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed === true\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<number>(0);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [optionSelected, setOptionSelected] = useState<string>('all');\n  const [filter, setFilter] = useState<string>('');\n\n  useEffect(() => {\n    getTodos().then(result => {\n      setFilteredTodos(result);\n      setTodos(result);\n    });\n  }, []);\n\n  const filterByOption = (option: string): Todo[] => {\n    switch (option) {\n      case 'active':\n        return todos.filter((todo) => todo.completed === false);\n      case 'completed':\n        return todos.filter((todo) => todo.completed === true);\n      default: return todos;\n    }\n  };\n\n  useEffect(() => {\n    const filtered = filterByOption(optionSelected).filter((todo) => todo.title.toLowerCase().includes(filter.toLowerCase()));\n\n    setFilteredTodos(filtered);\n  }, [optionSelected, filter]);\n\n  const selectedUser = () => {\n    return todos.find((todo) => todo.id === selectedTodo) as Todo;\n  };\n\n  const filteredTodoFunc = (filteredStr: string) => {\n    setFilter(filteredStr);\n  };\n\n  const selectedOptionTodo = (optionValue: string) => {\n    setOptionSelected(optionValue);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter onFilterValueChange={filteredTodoFunc} onSelectedOptionTodo={selectedOptionTodo} />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 ? (\n                <Loader />\n              ) : (\n                <TodoList todos={filteredTodos} selectedTodo={setSelectedTodo} isModalOpen={!!selectedTodo} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (<TodoModal todo={selectedUser()} closeModalTodo={() => setSelectedTodo(0)} />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}